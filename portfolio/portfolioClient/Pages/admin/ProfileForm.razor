@using portfolioClient.Repository;
@inject HttpClient _client




<div>
    <EditForm Model='@_profile' OnValidSubmit="Submit"  class="card card-body bg-light mt-5 container-fluid">
        <DataAnnotationsValidator/>
        <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="name">
                    name
                </label>
            </div>
            <div class="col-10 ">
                <InputText  @bind-Value="_profile.name" class="form-control"/>
            </div>
        </div>
        <div class="row ">
              <div class="col-2 col-form-label">
                <label class="form-label" for="preferedName">
                    prefered Name
                </label>
            </div>
            <div class="col-10 ">
                <InputText  @bind-Value="_profile.preferedName" class="form-control"/>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-2 col-form-label">
                <label class="form-label" for="description">
                    description
                </label>
            </div>
            <div class="col-10 ">
                <InputTextArea  @bind-Value="_profile.description" class="form-control"/>
            </div>
        </div>
        <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="hackerrank">
                    hackerRank
                </label>
            </div>
            <div class="col-10 ">
                <InputText @bind-Value="@_profile.hackerRank" class="form-control"/>
            </div>
        </div>
        <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="github">
                    LeetCode
                </label>
            </div>
            <div class="col-10 col-form-label">
                <InputText @bind-Value="@_profile.leetcode" class="form-control"/>
            </div>
        </div>
                <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="linkedin">
                    LinkedIn
                </label>
            </div>
            <div class="col-10 ">
                <InputText @bind-Value="@_profile.linkedin" class="form-control"/>
            </div>
        </div>               
        <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="imageUrl">
                    image url
                </label>
            </div>
            <div class="col-10 ">
                <InputText @bind-Value="@_profile.imageUrl" class="form-control"/>
            </div>
        </div>
                      
        <div class="row ">
            <div class="col-2 col-form-label">
                <label class="form-label" for="email">
                    Email
                </label>
            </div>
            <div class="col-10 ">
                <InputText @bind-Value="@_profile.email" class="form-control"/>
            </div>
        </div>
                <div class="row  ">

            <div class="align-content-end" >
                <button value="submit" class="btn btn-primary " >submit</button>
            </div>
        </div>
    </EditForm>
</div>
@code {
    [Parameter]
    public ProfileRepository _profile { get; set; }
    [Parameter]
    public Uri url { get; set; }
    public string hackerRank { get; set; }
    public string leetcode { get; set; }
    public string linkedin { get; set; }

    public string operation { get; set; }
    protected override void OnAfterRender(bool firstRender)
    {
        if (url.ToString() == "https://localhost:7210/api/Profile/") _profile = new ProfileRepository();
        if (string.IsNullOrEmpty(_profile.email)) operation = "adding";
        else operation = "update";


    }

    public async Task  Submit()
    {
        if (operation == "adding")
        {
            await _client.PostAsJsonAsync<ProfileRepository>(url,_profile);

        }
        else
        {
            await _client.PutAsJsonAsync<ProfileRepository>(url,_profile);
        }
        Console.WriteLine("yonis");
    }

    
    

}
